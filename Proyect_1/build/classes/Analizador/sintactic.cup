package Analizador;
import java_cup.runtime.Symbol;
import proyect_1.Metodos;

parser code
{:
    
    public static String SalidaGolang=""; 
    public static String Temp="";
    public int CountValor = 0;
    public static boolean is_asignacion = true; 
    public static String Tempadec = "";
// para la sentencia if 
    public static String Temp2 = "";
    public static String Temp3 = "";
    public static boolean V1 = true; 
    public static boolean V2 = true; 
    public static boolean V3 = true; 
// para sentencia switch
    public static String SalidaIF = "";
    public static String SalidaSwitch = "";
    public static boolean Is_repetido = true; 
// para asignacion
    public static String TempAsig = "";
// para para
    public static String SalidaPara = "";
    public static boolean entrymas = true; 
// para mientras
    public static String SalidaMientras = "";
    public static boolean Mien = true; 
// para Repetir 
    public static String Salidarepetir = "";
    public static boolean Reptir = true; 
    public static boolean Rep_not = true; 

:}
action code 
{:
:}



terminal
pareini,parefin,corini,corfin,
tinicio,tfin,tingreso,tcomo,tconValor,tpuntoComa,tasignacion,
tSi,tfinsi,tentonces,tDLcontrario,tosi, tsegun,thacer,Tinteg,tfinsegun,tpara,thasta,tFinpara,tmasmas,
tmientras,tFinMi,trepit,thastaque,treturn,tmetodo,tFINMetodo,tconparametros,tfuncion,tFinFuncion,tejecutar,timprimir,timprimirNL,
exp,trest,tsum, tdiv ,tmul ,tpot,tmod,Valida_CC;

terminal String comentario,cadena,car_LaN,car_NaL,boolV,boolF,Entero,Decimal,variable,tTipoDato,coma,Todo_Valores,Valida_Pot;
terminal String  tmayor,tmenor,tMayigual,tmenigual,tigual,tdistinto,tand,tor,tnot,tcon,Valida_SC;



non terminal INICIO ,JERARQUIA,
SUB,SUB2,MENU,Lista_Operaciones,AGREGAR_VALORES;

non terminal String DECLARACION, ASIGNACION,CUAL_TIPO,VARIABLES,PREINICIO,CUALTIPO_II,IMPRIMIR,VARIABLES2;

// ----- terminales para CONDICIONAL SI --------------------
non terminal String CONDICIONAL_SI,IS,DLCONTRARIO,O_SI,CON_SI,O_SI_RECURSIVO,ENCASO;


//--------------- terminales para CONDICIONAL_SEGUN --------------------------------    
non terminal String SWITCH,MULTISWITCH , CASE;

//--------------- terminales para PARA -------------------------------
non terminal String PARA,INS_FOR,OPCIONAL1,TIPO_FOR;

//------------------ terminales para Mientras-------------
non terminal String MIENTRAS,CON_SI2,INS_MIEN2,CON_SI3,REPT_HASTA,RETURNN;



start with INICIO;

INICIO::= tinicio  MENU{:System.out.println(SalidaGolang);:} tfin ;



MENU ::= MENU Lista_Operaciones
    | Lista_Operaciones
;

Lista_Operaciones ::= ASIGNACION:asig
                     {: SalidaGolang += asig;:}
        | DECLARACION:dec
            {: SalidaGolang += dec;:}
        | comentario:comento
            {: SalidaGolang += comento+"\n";:}
        | IMPRIMIR:b
            {: SalidaGolang += b;:}
        | CONDICIONAL_SI:c
            {: SalidaGolang += c+"\n"; SalidaIF=""; :}
        | SWITCH:a
            {: SalidaGolang += a+"\n"; SalidaSwitch = ""; :}
        | PARA:para
            {: SalidaGolang += para+"\n";  SalidaPara="";:}
        | MIENTRAS:mien 
            {: SalidaGolang += mien+"\n";  SalidaMientras="";:}
        | REPT_HASTA:rept
            {: SalidaGolang += rept+"\n";  Salidarepetir="";:}
        | RETURNN:ret
            {: SalidaGolang += ret+"\n"; :}
;


//--------------------------------------------- INGRESAR VALORES ----------------------------------------------------
DECLARACION ::= tingreso VARIABLES tcomo PREINICIO:resivido{: RESULT = Tempadec+resivido;  :}
;

VARIABLES ::=  VARIABLES coma:d variable:a
                {: Tempadec = Tempadec+" "+d+" "+a;  CountValor +=1; :}
        | variable:a
         {:Tempadec = "var"+" "+a; CountValor +=1;:}
;
PREINICIO ::=  tTipoDato:tipo tconValor CUAL_TIPO:valor  tpuntoComa {: RESULT = Metodos.Validados(tipo,valor,CountValor);  CountValor = 0; :}
;

//------------------------------------------------ otra cosa--------------------------------------------------------------------------



//------------------------------------------ asignacion-----------------------------------------------------------------------------------

ASIGNACION ::= VARIABLES2 tasignacion CUAL_TIPO:valor tpuntoComa{: RESULT = TempAsig+Metodos.asignacion(valor,CountValor); CountValor = 0;:}
            
;

VARIABLES2 ::=  VARIABLES2 coma:d variable:a
                    {:  TempAsig = TempAsig+" "+d+" "+a;  CountValor += 1;:}
        | variable:a
            {: TempAsig = a;   CountValor += 1;:}
;


CUAL_TIPO ::= Entero:valor
        {: RESULT = valor; :}
    | Decimal:valor
       {: RESULT = valor; :}
    | boolV:valor
       {: RESULT = valor; :}
    | boolF:valor
        {: RESULT = valor; :}
    | car_LaN:valor
        {: RESULT = valor; :}
    | car_NaL:valor
        {: RESULT = valor; :}
    | cadena:valor
        {: RESULT = valor; :}
    | Todo_Valores:valor
             {: RESULT = valor; :}
    | variable:valor
             {: RESULT = valor; :}
    | Valida_SC:valor
             {: RESULT = valor; :}
;


IMPRIMIR ::= timprimir CUAL_TIPO:a tpuntoComa{:RESULT =  "\t"+"fmt.Print("+a+")"+"\n";:}
            | timprimirNL  CUAL_TIPO:a  tpuntoComa{:RESULT = "\t"+"fmt.Println("+a+")"+"\n";:} 
            | timprimirNL pareini CUAL_TIPO:a parefin tpuntoComa{:RESULT = "\t"+"fmt.Println("+a+")"+"\n"; :}
;


//-------------------CONDICION IF-----------------------------
CONDICIONAL_SI ::= tSi{:SalidaIF += "\t"+"if "; V3 = false;:} CON_SI tentonces{:SalidaIF +="{"+"\n";:} O_SI_RECURSIVO  tfinsi{: SalidaIF += "\t"+"}"+"\n";RESULT = SalidaIF; :}

;

O_SI_RECURSIVO ::= O_SI_RECURSIVO O_SI
        |  O_SI
;

O_SI ::= tosi{: V1 = false;  V3 = true;:} CON_SI tentonces
            {: SalidaIF += "\t"+"} else if "+Temp3+" "+"{"+"\n";:}
        | tDLcontrario  tentonces
             {: SalidaIF +="\t"+"}else"+"{"+"\n";:}
        | IMPRIMIR:print
             {: SalidaIF += print; :}
             
        | SWITCH:a 
            {: SalidaIF += a;:}
        | CONDICIONAL_SI
        | MIENTRAS:b
            {: SalidaIF += b; :}
        | DECLARACION:dec
            {:  SalidaIF += dec;:}
        | comentario:comento
            {:  SalidaIF += comento ;:}
        | PARA:para
            {: SalidaIF += para; :}
        | REPT_HASTA:rept
            {: SalidaIF += rept; :}
        | RETURNN:ret
            {: SalidaIF += ret;  :}
        | ASIGNACION:asig
             {: SalidaIF += asig;:}

;


CON_SI ::=  CON_SI IS:a CUAL_TIPO:valor
            {:  if(V1 == false){
                     Temp3 = Temp2+" "+a+" "+valor+" ";
                }
                if(V3 == false){
                     SalidaIF += Temp2 +" "+a+" "+valor+" ";
                }
                if(Mien == false){
                    
                     Temp3 = Temp2+" "+a+" "+valor+" ";
                     Temp2 = "";
                     SalidaMientras+= Temp3;
                }    
               

            
            :}
    |ENCASO:a  CUAL_TIPO:valor 
           {:if(V2 == false){ SalidaIF += a+valor;}else{Temp2 = valor;}:}

;
ENCASO ::= tnot
           {: V2 = false; RESULT = "!";:}
        | 
;

IS ::= tmayor:valor
        {: RESULT = ">"; :}
    | tmenor:valor
        {: RESULT = "<"; :}
    | tMayigual:valor
        {: RESULT =  ">="; :}
    | tmenigual:valor
        {: RESULT = "<="; :}
    | tigual:valor
        {: RESULT = "=="; :}
    | tdistinto:valor
        {: RESULT = "!="; :}
    | tor:valor
        {: RESULT = "||"; :}
    | tand:valor
        {: RESULT = "&&"; :}
;

// ---------------------- Seleccion Multiple -------------------------

SWITCH ::= tsegun{:SalidaSwitch += "\t"+"switch";:} CUAL_TIPO:a {:SalidaSwitch += " "+a+" "+"{"+"\n"; :} thacer MULTISWITCH tfinsegun {: SalidaSwitch += "\t"+"}"+"\n"; RESULT = SalidaSwitch; :};

MULTISWITCH ::= MULTISWITCH CASE
        | CASE
;
CASE ::= Tinteg CUAL_TIPO:a Tinteg tentonces
            {: SalidaSwitch += "\t"+"case "+a+": "+"\n";:}
        | tDLcontrario tentonces 
            {: SalidaSwitch += "\t"+"default"+": "+"\n";:}
        | IMPRIMIR:print
            {: SalidaSwitch += print;:}
        | CONDICIONAL_SI:a
            {: SalidaSwitch += a;:}
        | SWITCH 
        | ASIGNACION:asig
              {: SalidaSwitch += asig;:}
        | DECLARACION:dec
            {: SalidaSwitch += dec;:}
        | comentario:comento
            {: SalidaSwitch += comento+"\n";:}
        | PARA:para
            {: SalidaSwitch += para; :}
        | MIENTRAS:mien 
            {: SalidaSwitch += mien; :}
        | REPT_HASTA:rept
            {: SalidaSwitch += rept; :}
        | RETURNN:ret
            {: SalidaSwitch += ret; :}
;

//----------------------------- CICLO PARA ----------------------------------------------------------


PARA ::= tpara {: SalidaPara += "\t"+"for ";:}  
variable:a tasignacion TIPO_FOR:b thasta TIPO_FOR:c{: SalidaPara += a+" := "+b+"; "+a+" < "+c+"; ";:}
OPCIONAL1:d{: if(entrymas == false){SalidaPara += a+" = "+a+"+"+d+" {"+"\n";}else{ SalidaPara += a+"++"+" {"+"\n";}:} 
thacer{:entrymas = true;:} INS_FOR:k {:SalidaPara += k;:} tFinpara{: SalidaPara += "\t"+ "{"+"\n";   RESULT = SalidaPara; :}          
;

TIPO_FOR ::= Entero:a
             {: RESULT = a; :}
    | variable:a
             {: RESULT = a; :}
;

OPCIONAL1 ::=  tcon tmasmas{:entrymas = false;:} Entero:a
            {: RESULT = a; :}
        |{: RESULT = "\t"+"//null"+"\n";:}
;    

INS_FOR ::= IMPRIMIR:a
             {: RESULT = a; :}
        |ASIGNACION:asig
                {: RESULT = asig;:}
        | DECLARACION:dec
            {: RESULT = dec;:}
        | comentario:comento
            {: RESULT= comento+"\n";:}
        | CONDICIONAL_SI:c
            {: RESULT = c;  :}
        | SWITCH:a
            {: RESULT = a; :}
        | PARA
        | MIENTRAS:mien 
            {: RESULT = mien; :}
        | REPT_HASTA:rept
            {: RESULT = rept; :}
        | RETURNN:ret
            {: RESULT = ret; :}
        | {: RESULT = "\t"+"//null"+"\n";:}
;

//---------------------------------------- Mientras ---------------

MIENTRAS ::= tmientras{: SalidaMientras += "\t"+"for true {"+"\n"; Mien = false; SalidaMientras +="\t"+"\t"+"if "; :} CON_SI2{: Mien = true; SalidaMientras +="){"+"\n"; SalidaMientras +="\t"+"\t"+"\t"+"break"+"\n";:} thacer {: SalidaMientras +="\t"+"\t"+"}"+"\n";:} INS_MIEN2:ins{: SalidaMientras += "\t"+ins; :} tFinMi{: RESULT = SalidaMientras;:};

CON_SI2 ::=  CON_SI3
        | tnot{: if(Rep_not == false){Salidarepetir += " !";}   SalidaMientras +=" !"; :} pareini CON_SI3 parefin
        | pareini CON_SI3 parefin

;

INS_MIEN2 ::= IMPRIMIR:a
                {: RESULT = a;:}
        |ASIGNACION:asig
                {: RESULT = asig;:}
        | DECLARACION:dec
            {: RESULT = dec;:}
        | comentario:comento
            {: RESULT= comento+"\n";:}
        | CONDICIONAL_SI:c
            {: RESULT = c;  :}
        | SWITCH:a
            {: RESULT = a; :}
        | PARA:a
           {: RESULT = a; :}
        | MIENTRAS
        | REPT_HASTA:rept
            {: RESULT = rept; :}
        | RETURNN:ret
            {: RESULT = ret; :}
        | {: RESULT = "\t"+"//null"+"\n";:}
;


CON_SI3 ::=  CON_SI3 IS:a CUAL_TIPO:valor
            {:  
                if(Mien == false){
                    
                     Temp3 = Temp2+" "+a+" "+valor+" ";
                     Temp2 = "";
                     SalidaMientras+= Temp3;
                }
                if(Reptir == false){
                    
                     Temp3 = Temp2+" "+a+" "+valor+" ";
                     Temp2 = "";
                     Salidarepetir += Temp3;
                }  
   
               
            :}
    |ENCASO:a  CUAL_TIPO:valor 
           {:if(V2 == false){ Temp2 = "("+a+valor;}else{Temp2 = "("+valor;}:}

;

//------------------------------------- REPETIR HASTA -------------------------------------

REPT_HASTA ::= trepit{:Salidarepetir += "\t"+"for true {"+"\n"; Reptir = false; :} INS_MIEN2:a {: Salidarepetir += "\t"+a;:}thastaque{:Rep_not = false; Salidarepetir += "\t"+"\t"+"if";:} CON_SI2  {: 
 if(Rep_not == false){
    
    
 }else{
    Salidarepetir += "\t"+"\t"+"if(";
  }
 

Rep_not = true;
 Salidarepetir += "){"+"\n"+"\t"+"\t"+"\t"+"break"+"\n"+"\t"+"\t"+"}"+"\n"+"\t"+"}"+"\n"; RESULT = Salidarepetir;:};

//------------------------------------- return---------------------------------

RETURNN ::= treturn CUAL_TIPO:retn tpuntoComa{: RESULT = "\t"+retn; :} ;